visual:
- init
  - robot信息
  - 控制界面
  - 图形元素储存
  - 绘制控制面板+初次绘制
- 背景绘制
- 控制机器人
  - 控制面板回调函数
  - 通信，修改robot对象
- 绘制可视化元素
  - 清除图中所有东西
  - 更新信息
  - 机器人
    - xform: 机器人(Point) 朝向(arrow)
    - 扫描结果: 激光束(line)、激光头(Point)、碰撞点(Point)
    - 距离信息(text)
  - 解
    - 预估xform: 机器人(Point) 朝向(arrow)
    - 激光: xform整合版线条向量(line)

robot与calculator执行类话题通信
robot
- 自行扫描, 不断刷新扫描结果
calculator
- 自行计算，不断刷新解

robot到visual
{
'Point': (robot.x, robot.y), 
Direction': (robot.phi), 
laser': robot.current_scan_result
}
robot.current_scan_result的格式:
list[
  dict{
    'position': (laser_x, laser_y),
    'hit_point': (hit_x, hit_y),
    'distance': float('inf'),
    'angle': global_angle,
    'config_index': len(scan_results)
  }, 
  dict...
]
calculator到visual
calculator.result_list
list[
  result = {
                'P': P,
                'phi': phi,
                'v': v
            }, 
  result = {
                'P': P,
                'phi': phi,
                'v': v
            }, ...
]
这里的v就是三条从xform出发的向量
它用的是xform 的相对坐标系
也就是说如果要绘制的话
需要加上xform的位移和偏转角